/**
 * Celestibytes Gradle Plugin
 * CelestiGradle
 *
 * Master build script
 *
 * @author PizzAna
 */

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'eclipse'
apply plugin: 'maven'
apply plugin: 'signing'

group = 'io.github.celestibytes'
version = "2.4.1"
archivesBaseName = project.getName()
targetCompatibility = '1.6'
sourceCompatibility = '1.6'

repositories {
    mavenLocal()
    maven {
        name = "forge"
        url = "http://files.minecraftforge.net/maven"
    }
    maven {
        name = "eclipse"
        url = "https://repo.eclipse.org/content/groups/eclipse/"
    }
    maven {
        name = "sonatype"
        url = "https://oss.sonatype.org/content/repositories/snapshots/"
    }
    maven {
        name = "cbs"
        url = "https://raw.githubusercontent.com/Celestibytes/files/master/"
    }
    maven {
        name = "mojang"
        url = "https://libraries.minecraft.net/"
    }
    mavenCentral()
    flatDir {
        name "fileRepo"
        dirs "repo"
    }
}

jar {
    manifest {
        attributes 'version': project.version, 'javaCompliance': project.targetCompatibility
        attributes 'group': project.group
    }
}

configurations {
    deployerJars
    compileOnly
}

dependencies {
    compile gradleApi()

    // moved to the beginning to be the overrider
    compile 'org.ow2.asm:asm-debug-all:4.1' // Debug version, so we can have generics!

    compile 'net.sourceforge.argo:argo:3.4' // json stuff? perhaps replace with json slurper and stuff?
    compile 'net.sf.opencsv:opencsv:2.3' // reading CSVs.. also used by SpecialSource
    compile 'com.cloudbees:diff4j:1.1' // for difing and patching
    compile 'com.github.abrarsyed.jastyle:jAstyle:1.2' // formatting
    compile 'trove:trove:1.0.2' // because its awesome.


    compile 'com.github.jponge:lzma-java:1.3' // replaces the LZMA binary
    compile 'com.nothome:javaxdelta:2.0.1' // GDIFF implementation for BinPatches
    compile 'com.google.code.gson:gson:2.2.4' // Used instead of Argo for buuilding changelog.
    compile 'com.github.tony19:named-regexp:0.2.3' // 1.7 Named regexp features

    compile 'net.md-5:SpecialSource:1.7-SNAPSHOT' // deobf and reobs

    // beause curse
    compile 'org.apache.httpcomponents:httpclient:4.3.3'
    compile 'org.apache.httpcomponents:httpmime:4.3.3'

    // mcp stuff
    compile 'de.oceanlabs.mcp:RetroGuard:3.6.6'
    compile 'de.oceanlabs.mcp:mcinjector:3.2-SNAPSHOT'
    compile 'net.minecraftforge.srg2source:Srg2Source:3.2-SNAPSHOT'

    // PizzAnaLib
    compile 'io.github.celestibytes:PizzAnaLib:1.1.3'

    // stupid maven
    deployerJars "org.apache.maven.wagon:wagon-ssh:2.2"

    // Stuff used in the GradleStart classes
    compileOnly 'com.mojang:authlib:1.5.16'
}

task javadocJar(type: Jar) {
    classifier = 'javadoc'
    from javadoc
}

task sourcesJar(type: Jar) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

artifacts {
    archives jar, javadocJar, sourcesJar
}

signing {
    required {gradle.taskGraph.hasTask("uploadArchives")}
    sign configurations.archives
}

//These should add a compile time only dependancies to eclipse, ide, and javac, but NOT to the generated POM on maven.
//sourceSets.main.compileClasspath += configurations.compileOnly
//idea.module.scopes.PROVIDED.plus += configurations.compileOnly
//eclipse.classpath.plusConfigurations += configurations.compileOnly

uploadArchives {
    repositories {
        if (project.hasProperty("ossrhUsername") && project.hasProperty("ossrhPassword"))
        {
            mavenDeployer {
                beforeDeployment {MavenDeployment deployment -> signing.signPom(deployment)}

                repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
                    authentication(userName: ossrhUsername, password: ossrhPassword)
                }

                snapshotRepository(url: "https://oss.sonatype.org/content/repositories/snapshots/") {
                    authentication(userName: ossrhUsername, password: ossrhPassword)
                }

                pom {
                    groupId = project.group
                    version = project.version
                    artifactId = project.archivesBaseName
                }

                pom.project {
                    name project.archivesBaseName
                    packaging 'jar'
                    description 'Gradle plugin for building Celestibytes projects. ForgeGradle included.'
                    url 'https://github.com/Celestibytes/CelestiGradle'

                    scm {
                        url 'https://github.com/Celestibytes/CelestiGradle'
                        connection 'scm:git:git://github.com/Celestibytes/CelestiGradle.git'
                        developerConnection 'scm:git:git@github.com:Celestibytes/CelestiGradle.git'
                    }

                    issueManagement {
                        system 'github'
                        url 'https://github.com/Celestibytes/CelestiGradle/issues'
                    }

                    developers {
                        developer {
                            id 'PizzAna'
                            name 'PizzAna'
                            roles {role 'developer'}
                        }
                    }
                }
            }
        }
        else
        {
            add project.repositories.mavenLocal()
            logger.info('Publishing to repo folder')

            mavenDeployer {
                repository(url: 'file://localhost/' + project.file('repo').getAbsolutePath())
            }
        }
    }
}
